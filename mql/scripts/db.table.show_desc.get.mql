script create get "db.table.show_desc" false 1 
  (param
  	(var "[type]" {true} "The schema" is_null:false is_empty:false "")
  	(var "[schema]" {true} "The schema" is_null:false is_empty:false "")
  	(var "[table]" {true} "The table name" is_null:false is_empty:false "")
  ;) 
  "Show table description" 
{
	
	switch ([type])
		("SQLServer") {concat 
			"SELECT 
				COLUMN_NAME as FIELD, 
				(CASE WHEN DATA_TYPE='varchar' THEN (CASE WHEN CHARACTER_MAXIMUM_LENGTH>0 THEN concat('varchar(', CHARACTER_MAXIMUM_LENGTH, ')') ELSE 'longtext' END) ELSE DATA_TYPE END) as TYPE, 
				IS_NULLABLE, 
				CHARACTER_MAXIMUM_LENGTH, 
				NUMERIC_PRECISION, 
				NUMERIC_SCALE, 
				COLUMN_DEFAULT, 
				(CASE WHEN (CASE 
					WHEN COLS.COLUMN_NAME in (
						SELECT Col.Column_Name 
						from INFORMATION_SCHEMA.TABLE_CONSTRAINTS Tab, INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE Col 
						WHERE 
							Col.Constraint_Name = Tab.Constraint_Name
							AND Col.Table_Name = Tab.Table_Name
							AND Constraint_Type = 'PRIMARY KEY'
							AND Col.Table_Name = '" [table] "')
					THEN 1 
					ELSE 0 
				END)=1 THEN 'PRI' ELSE '' END) AS [KEY] ,
				(CASE WHEN (SELECT is_identity 
						from sys.columns
						WHERE 
							columns.object_id = object_id('" [table] "')
							AND columns.name = COLUMN_NAME)=1 THEN 'auto_increment' ELSE '0' END) as EXTRA
			FROM INFORMATION_SCHEMA.COLUMNS COLS 
			WHERE TABLE_NAME = '" [table] "'";}
		("MySQL") {concat 
			"desc `" [table] "`";}
		("H2") {concat 
			"SELECT 
				A.column_name as FIELD, 
				(CASE WHEN A.type_name='varchar' THEN concat('varchar(', A.CHARACTER_MAXIMUM_LENGTH, ')') ELSE A.type_name END) as TYPE, 
				A.is_nullable, 
				A.CHARACTER_MAXIMUM_LENGTH, 
				A.numeric_precision, 
				A.numeric_scale, 
				A.column_default, 
				A.sequence_name, 
				(CASE WHEN B.constraint_type='PRIMARY KEY' THEN 'PRI' ELSE '' END) as KEY,
				(CASE WHEN A.column_default LIKE 'NEXT VALUE FOR%' THEN 'auto_increment' ELSE '' END) as EXTRA
			FROM INFORMATION_SCHEMA.COLUMNS A
			LEFT JOIN INFORMATION_SCHEMA.CONSTRAINTS B ON A.TABLE_SCHEMA=B.TABLE_SCHEMA and A.TABLE_NAME=B.TABLE_NAME and A.COLUMN_NAME=B.column_list
			WHERE A.table_schema = '" [schema] "' and A.table_name = '" [table] "'";}
		("PostgreSQL") {concat 
			"SELECT 
				c.column_name as FIELD, 
				(CASE WHEN c.data_type like 'character%' THEN concat('varchar(', c.character_maximum_length, ')') ELSE c.data_type END) as TYPE, 
				c.is_nullable, 
				(CASE WHEN tc.constraint_type='PRIMARY KEY' THEN 'PRI' ELSE '' END) as KEY,
				c.column_default, 
				c.character_maximum_length, 
				c.character_octet_length, 
				c.numeric_precision, 
				c.numeric_scale, 
				c.datetime_precision, 
				c.interval_type, 
				c.interval_precision,
				(CASE WHEN c.column_default like 'nextval(%' THEN 'auto_increment' ELSE '0' END) as EXTRA
			FROM INFORMATION_SCHEMA.columns c 
			LEFT JOIN INFORMATION_SCHEMA.constraint_column_usage AS ccu ON c.table_schema = ccu.table_schema AND c.table_name = ccu.table_name AND c.column_name = ccu.column_name 
			LEFT JOIN INFORMATION_SCHEMA.table_constraints AS tc ON c.table_schema = tc.table_schema AND c.table_name = tc.table_name AND ccu.constraint_name = tc.constraint_name
			WHERE concat(c.table_schema, '.', c.table_name)='" [schema] "." [table] "'";}
		("Oracle") {concat 
			"select 
				all_tab_columns.COLUMN_NAME as FIELD, 
				(CASE WHEN all_tab_columns.DATA_TYPE='VARCHAR2' THEN concat('varchar(', concat(all_tab_columns.DATA_LENGTH, ')')) ELSE all_tab_columns.DATA_TYPE END) as TYPE, 
				all_tab_columns.DATA_LENGTH, 
				all_tab_columns.DATA_PRECISION, 
				all_tab_columns.DATA_SCALE, 
				all_tab_columns.NULLABLE, 
				all_tab_columns.COLUMN_ID, 
				all_tab_columns.DEFAULT_LENGTH, 
				all_tab_columns.DATA_DEFAULT, 
				all_tab_columns.NUM_DISTINCT, 
				(CASE WHEN all_tab_columns.identity_column='YES' THEN 'auto_increment' ELSE '0' END) as EXTRA,
				(CASE WHEN all_constraints.constraint_type='P' THEN 'PRI' ELSE '0' END) as KEY
			from all_tab_columns
			LEFT JOIN all_cons_columns ON all_cons_columns.table_name = all_tab_columns.table_name and all_cons_columns.OWNER = all_tab_columns.OWNER and all_cons_columns.column_name = all_tab_columns.column_name and all_cons_columns.CONSTRAINT_NAME like 'PK_%'
			LEFT JOIN all_constraints ON all_constraints.table_name = all_tab_columns.table_name and all_constraints.OWNER = all_tab_columns.OWNER and all_constraints.CONSTRAINT_NAME = all_cons_columns.CONSTRAINT_NAME 
			WHERE all_tab_columns.table_name ='" [table] "' and all_tab_columns.OWNER='" [schema] "' 
			ORDER BY all_tab_columns.COLUMN_ID";}
		("AS400") {concat 
			"select 
				c.COLUMN_NAME as FIELD,
				c.DATA_TYPE as TYPE,
				c.IS_NULLABLE,
				c.LENGTH,
				c.NUMERIC_PRECISION,
				c.NUMERIC_SCALE,
				c.COLUMN_DEFAULT,
				c.COLUMN_TEXT,
				k.asc_or_desc,
				'' as EXTRA,
				'' as KEY
			from qsys2.syscolumns c
				join qsys2.systables t on c.table_schema = t.table_schema and c.table_name   = t.table_name
				left outer join sysibm.sqlstatistics k on c.table_schema = k.table_schem and c.table_name   = k.table_name and c.table_name   = k.index_name and c.column_name  = k.column_name where c.table_schema = '" [schema] "' and c.table_name = '" [table] "'";}
		("HSQL") {concat 
			"SELECT 
				A.COLUMN_NAME as FIELD, 
				(CASE WHEN A.DATA_TYPE='CHARACTER VARYING' THEN concat('varchar(', concat(A.CHARACTER_MAXIMUM_LENGTH, ')')) ELSE A.DATA_TYPE END) as TYPE, 
				A.IS_NULLABLE, 
				A.CHARACTER_MAXIMUM_LENGTH, 
				A.NUMERIC_PRECISION, 
				A.NUMERIC_SCALE, 
				A.COLUMN_DEFAULT, 
				(CASE WHEN A.IS_IDENTITY='YES' THEN 'auto_increment' ELSE '0' END) as EXTRA,
				(CASE WHEN C.CONSTRAINT_TYPE='PRIMARY KEY' THEN 'PRI' ELSE '0' END) as KEY
			FROM INFORMATION_SCHEMA.COLUMNS A 
			LEFT JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE B ON  A.TABLE_SCHEMA=B.TABLE_SCHEMA and A.TABLE_NAME=B.TABLE_NAME and A.COLUMN_NAME=B.COLUMN_NAME and B.CONSTRAINT_NAME like 'SYS_PK_%'
			LEFT JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS C ON B.CONSTRAINT_CATALOG=C.CONSTRAINT_CATALOG and B.CONSTRAINT_SCHEMA=C.CONSTRAINT_SCHEMA and B.CONSTRAINT_NAME=C.CONSTRAINT_NAME and C.CONSTRAINT_TYPE='PRIMARY KEY'
			WHERE A.TABLE_SCHEMA = '" [schema] "' and A.TABLE_NAME = '" [table] "'";}
		("DB2") {concat 
			"Select 
				name as FIELD, 
				coltype as TYPE, 
				nulls, 
				length, 
				scale, 
				colno, 
				keyseq, 
				default ,
				'' as EXTRA,
				'' as KEY
			from Sysibm.syscolumns 
			where TBCREATOR = '" [schema] "' and tbname = '" [table] "'";}
		("Derby") {concat 
			"select 
				sc.columnname as FIELD, 
				LCASE(sc.columndatatype || '') as TYPE, 
				sc.columndefault, 
				(CASE WHEN sc.autoincrementvalue=1 THEN 'auto_increment' ELSE '0' END) as EXTRA,
				'' as \"KEY\"
			from sys.syscolumns sc
			inner join sys.systables st on sc.REFERENCEID=st.TABLEID
			inner join sys.sysschemas sh on st.SCHEMAID=sh.SCHEMAID
			where sh.schemaname = UCASE('" [schema] "') and st.tablename = UCASE('" [table] "') and st.tabletype='T'";}
		("Firebird") {concat 
			"select 
				rf.rdb$relation_name as table_name, 
			     rf.rdb$field_name as FIELD,
			     CASE F.RDB$FIELD_TYPE
				    WHEN 7 THEN
				      CASE F.RDB$FIELD_SUB_TYPE
				        WHEN 0 THEN 'SMALLINT'
				        WHEN 1 THEN 'NUMERIC(' || F.RDB$FIELD_PRECISION || ', ' || (-F.RDB$FIELD_SCALE) || ')'
				        WHEN 2 THEN 'DECIMAL'
				      END
				    WHEN 8 THEN
				      CASE F.RDB$FIELD_SUB_TYPE
				        WHEN 0 THEN 'INTEGER'
				        WHEN 1 THEN 'NUMERIC('  || F.RDB$FIELD_PRECISION || ', ' || (-F.RDB$FIELD_SCALE) || ')'
				        WHEN 2 THEN 'DECIMAL'
				      END
				    WHEN 9 THEN 'QUAD'
				    WHEN 10 THEN 'FLOAT'
				    WHEN 12 THEN 'DATE'
				    WHEN 13 THEN 'TIME'
				    WHEN 14 THEN 'CHAR(' || (TRUNC(F.RDB$FIELD_LENGTH / CH.RDB$BYTES_PER_CHARACTER)) || ') '
				    WHEN 16 THEN
				      CASE F.RDB$FIELD_SUB_TYPE
				        WHEN 0 THEN 'BIGINT'
				        WHEN 1 THEN 'NUMERIC(' || F.RDB$FIELD_PRECISION || ', ' || (-F.RDB$FIELD_SCALE) || ')'
				        WHEN 2 THEN 'DECIMAL'
				      END
				    WHEN 27 THEN 'DOUBLE'
				    WHEN 35 THEN 'TIMESTAMP'
				    WHEN 37 THEN 'VARCHAR(' || (TRUNC(F.RDB$FIELD_LENGTH / CH.RDB$BYTES_PER_CHARACTER)) || ')'
				    WHEN 40 THEN 'CSTRING' || (TRUNC(F.RDB$FIELD_LENGTH / CH.RDB$BYTES_PER_CHARACTER)) || ')'
				    WHEN 45 THEN 'BLOB_ID'
				    WHEN 261 THEN 'BLOB SUB_TYPE ' || F.RDB$FIELD_SUB_TYPE
				    ELSE 'RDB$FIELD_TYPE: ' || F.RDB$FIELD_TYPE || '?'
				  END as TYPE,
			     f.rdb$field_length,
			     f.rdb$field_scale,
				'' as EXTRA,
				'' as KEY
			from rdb$fields f
			join rdb$relation_fields rf on rf.rdb$field_source = f.rdb$field_name
			where rf.rdb$relation_name = '" [table] "'
		";}
		{exception (1) (concat "Type '" [type] "' is not supported!");}
	;

} "Return a table description";
script set delay "db.table.show_desc.get" 0 day {1;};
